{"version":3,"sources":["types/types.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","firebase/firebaseConfig.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","components/notes/NotesAppBar.js","hooks/useForm.js","components/notes/NotesScreen.js","components/journal/NothingSelected.js","actions/ui.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","notes","active","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","GoogleAuthProvider","loadNotes","a","collection","get","snap","forEach","push","data","fileUpload","file","formData","FormData","append","fetch","method","body","response","ok","json","cloudResp","secure_url","activeNote","addNewNote","setNote","startSaveNote","dispatch","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","NotesAppBar","useSelector","useDispatch","className","style","display","onChange","e","target","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startUpload","onClick","document","querySelector","click","useForm","useState","values","setValues","reset","newFormState","handleInputChange","value","NotesScreen","activeId","useRef","formValues","useEffect","current","placeholder","autoComplete","src","alt","delete","NothingSelected","setError","err","unsetError","stopLoading","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","catch","message","logout","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","Sidebar","signOut","newNote","Date","getTime","add","docRef","JournalScreen","LoginScreen","onSubmit","preventDefault","validator","isEmail","isEmpty","disabled","signInWithPopup","to","RegisterScreen","passwordConfirm","ignore_whitespace","isStrongPassword","equals","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PublicRoute","isLoggedIn","Component","rest","props","PrivateRoute","AppRouter","checking","setChecking","setIsLoggedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.62d439ce.chunk.js","sourcesContent":["export const types = {\n    // *login\n    login: '[auth] Login',\n    logout: '[auth] Logout',\n    // *ui\n    uiSetError: '[ui] Set Error',\n    uiUnsetError: '[ui] Unset Error',\n    uiStartLoading: '[ui] Star Loading',\n    uiStopLoading: '[ui] Stop Loading',\n    // *notes\n    notesAddNew: '[notes] New Note',\n    notesActive: '[notes] Set Active Note',\n    notesLoad: '[notes] Load Notes',\n    notesUpdated: '[notes] Update Note ',\n    notesFileURL: '[notes] Update Image',\n    notesDelete: '[notes] Delete Note',\n    notesLogoutCleaning: '[notes] Logout Cleaning',\n}\n","import { types } from '../types/types'\n\n/*\n{\n        notes:[],\n        active:null,\n        active:{ \n            id:,\n            title:,\n            body:,\n            imageURL:,\n            date:\n        }\n    }*/\nconst initialState = { notes: [], active: null }\nexport const notesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.notesActive:\n            return {\n                ...state,\n                active: {\n                    ...action.payload,\n                },\n            }\n        case types.notesLoad:\n            return {\n                ...state,\n                notes: [...action.payload],\n            }\n        case types.notesUpdated:\n            return {\n                ...state,\n                notes: state.notes.map((note) =>\n                    note.id === action.payload.id ? action.payload.note : note\n                ),\n            }\n        case types.notesDelete:\n            return {\n                ...state,\n                active: null,\n                notes: state.notes.filter((note) => note.id !== action.payload),\n            }\n        case types.notesLogoutCleaning:\n            return { ...state, active: null, notes: [] }\n        case types.notesAddNew:\n            return {\n                ...state,\n                notes: [action.payload, ...state.notes],\n            }\n        default:\n            return state\n    }\n}\n","import { types } from '../types/types'\n\nconst initialState = {\n    loading: false,\n    msgError: null,\n}\nexport const uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.uiSetError:\n            return {\n                ...state,\n                msgError: action.payload,\n            }\n        case types.uiUnsetError:\n            return {\n                ...state,\n                msgError: null,\n            }\n        case types.uiStartLoading:\n            return {\n                ...state,\n                loading: true,\n            }\n        case types.uiStopLoading:\n            return {\n                ...state,\n                loading: false,\n            }\n        default:\n            return state\n    }\n}\n","import { createStore, combineReducers, compose, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { authReducer } from '../reducers/authReducer'\nimport { notesReducer } from '../reducers/notesReducer'\nimport { uiReducer } from '../reducers/uiReducer'\n\nconst composeEnhancers =\n    (typeof window !== 'undefined' &&\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\n    compose\nconst reducers = combineReducers({\n    auth: authReducer,\n    ui: uiReducer,\n    notes: notesReducer,\n})\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(applyMiddleware(thunk))\n)\n","import { types } from '../types/types'\n\nexport const authReducer = (state = {}, action) => {\n    switch (action.type) {\n        case types.login:\n            return {\n                uid: action.payload.uid,\n                name: action.payload.displayName,\n            }\n        case types.logout:\n            return {}\n        default:\n            return state\n    }\n}\n","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nconst firebaseConfig = {\n    apiKey: 'AIzaSyBwga_iKUFRflBtKlnFW7l_pJiL7gs5jI8',\n    authDomain: 'react-course-c30d0.firebaseapp.com',\n    projectId: 'react-course-c30d0',\n    storageBucket: 'react-course-c30d0.appspot.com',\n    messagingSenderId: '178523331860',\n    appId: '1:178523331860:web:ab3da28faf8425e4adb601',\n}\n\nfirebase.initializeApp(firebaseConfig)\n\nconst db = firebase.firestore()\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider()\n\nexport { db, googleAuthProvider, firebase }\n","import { db } from '../firebase/firebaseConfig'\nexport const loadNotes = async (uid) => {\n    const snap = await db.collection(`${uid}/journal/notes`).get()\n    const notes = []\n    snap.forEach((note) => {\n        notes.push({\n            id: note.id,\n            ...note.data(),\n        })\n    })\n    return notes\n}\n","export const fileUpload = async (file) => {\n    const cloudUrl = `https://api.cloudinary.com/v1_1/joqtan/upload`\n    const formData = new FormData()\n    formData.append(`upload_preset`, `react-journal`)\n    formData.append(`file`, file)\n    try {\n        const response = await fetch(cloudUrl, {\n            method: 'POST',\n            body: formData,\n        })\n        if (response.ok) {\n            const cloudResp = await response.json()\n            return cloudResp.secure_url\n        } else {\n            throw await response.json()\n        }\n    } catch (e) {\n        throw e\n    }\n}\n","import { types } from '../types/types'\nimport { db } from '../firebase/firebaseConfig'\nimport { loadNotes } from '../helpers/loadNotes'\nimport Swal from 'sweetalert2'\nimport { fileUpload } from '../helpers/fileUpload'\n\nexport const startNewNote = () => {\n    return async (dispatch, getState) => {\n        const uid = getState().auth.uid\n        const newNote = {\n            title: '',\n            body: '',\n            date: new Date().getTime(),\n        }\n        const docRef = await db.collection(`${uid}/journal/notes`).add(newNote)\n        dispatch(activeNote(docRef.id, newNote))\n        dispatch(addNewNote(docRef.id, newNote))\n    }\n}\n\nexport const activeNote = (id, note) => ({\n    type: types.notesActive,\n    payload: { id, ...note },\n})\n\nexport const addNewNote = (id, note) => ({\n    type: types.notesAddNew,\n    payload: { id, ...note },\n})\n\nexport const startLoadingNotes = (uid) => {\n    return async (dispatch) => {\n        const notes = await loadNotes(uid)\n        dispatch(setNote(notes))\n    }\n}\n\nexport const setNote = (notes) => ({\n    type: types.notesLoad,\n    payload: notes,\n})\n\nexport const startSaveNote = (note) => {\n    return async (dispatch, getState) => {\n        const uid = getState().auth.uid\n        if (!note.url) {\n            delete note.url\n        }\n        const noteToFirestore = { ...note }\n        delete noteToFirestore.id\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore)\n        dispatch(refreshNote(note.id, noteToFirestore))\n        Swal.fire('saved', note.title, 'success')\n    }\n}\n\nexport const refreshNote = (id, note) => ({\n    type: types.notesUpdated,\n    payload: { id, note: { id, ...note } },\n})\n\nexport const startUpload = (file) => {\n    return async (dispatch, getState) => {\n        const { active: activeNote } = getState().notes\n        Swal.fire({\n            title: 'Uploading',\n            text: 'Please wait a moment',\n            allowOutsideClick: false,\n            showConfirmButton: false,\n            willOpen: () => {\n                Swal.showLoading()\n            },\n        })\n        const fileUrl = await fileUpload(file)\n        activeNote.url = fileUrl\n        dispatch(startSaveNote(activeNote))\n        Swal.close()\n    }\n}\n\nexport const startDelete = (id) => {\n    return async (dispatch, getState) => {\n        const uid = getState().auth.uid\n\n        await db.doc(`${uid}/journal/notes/${id}`).delete()\n\n        dispatch(deleteNote(id))\n    }\n}\n\nexport const deleteNote = (id) => ({\n    type: types.notesDelete,\n    payload: id,\n})\n\nexport const noteLogout = () => ({\n    type: types.notesLogoutCleaning,\n})\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startSaveNote, startUpload } from '../../actions/notes'\n\nconst NotesAppBar = () => {\n    const { active } = useSelector((state) => state.notes)\n\n    const dispatch = useDispatch()\n\n    const handleSavePicture = () => {\n        document.querySelector('#fileSelector').click()\n    }\n    const handleFileChange = (e) => {\n        const file = e.target.files[0]\n        if (file) {\n            dispatch(startUpload(file))\n        }\n    }\n\n    const handleSaveNote = () => {\n        dispatch(startSaveNote(active))\n    }\n\n    return (\n        <div className='notes__app-bar'>\n            <span>August 28th, 2021</span>\n            <input\n                type='file'\n                style={{ display: 'none' }}\n                onChange={handleFileChange}\n                id='fileSelector'\n            />\n            <div>\n                <button className='btn' onClick={handleSavePicture}>\n                    Picture\n                </button>\n                <button className='btn' onClick={handleSaveNote}>\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default NotesAppBar\n","import { useState } from 'react'\n\nexport const useForm = (initialState = {}) => {\n    const [values, setValues] = useState(initialState)\n\n    const reset = (newFormState = initialState) => {\n        setValues(newFormState)\n    }\n\n    const handleInputChange = ({ target }) => {\n        setValues({\n            ...values,\n            [target.name]: target.value,\n        })\n    }\n\n    return [values, handleInputChange, reset]\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport NotesAppBar from './NotesAppBar'\nimport { useForm } from '../../hooks/useForm'\nimport { activeNote, startDelete } from '../../actions/notes'\n\nconst NotesScreen = () => {\n    const dispatch = useDispatch()\n    const { active: note } = useSelector((state) => state.notes)\n\n    const activeId = useRef(note.id)\n\n    const [formValues, handleInputChange, reset] = useForm(note)\n\n    const { title, body } = formValues\n\n    const handleDelete = () => {\n        dispatch(startDelete(note.id))\n    }\n\n    useEffect(() => {\n        if (note.id !== activeId.current) {\n            reset(note)\n            activeId.current = note.id\n        }\n    }, [note, reset])\n    useEffect(() => {\n        dispatch(activeNote(formValues.id, { ...formValues }))\n    }, [formValues, dispatch])\n\n    return (\n        <div className='notes__main-content'>\n            <NotesAppBar />\n            <div className='notes__content animate__animated animate__fadeIn animate__fast'>\n                <input\n                    onChange={handleInputChange}\n                    type='text'\n                    name='title'\n                    value={title}\n                    placeholder='some awesome title'\n                    className='notes__title-input'\n                    autoComplete='off'\n                />\n                <textarea\n                    onChange={handleInputChange}\n                    name='body'\n                    value={body}\n                    placeholder='What happened today'\n                    className='notes__textarea'\n                ></textarea>\n                {note.url && (\n                    <div className='notes__image'>\n                        <img src={note.url} alt='note' />\n                    </div>\n                )}\n            </div>\n            <button className='btn btn-danger' onClick={handleDelete}>\n                Delete\n            </button>\n        </div>\n    )\n}\n\nexport default NotesScreen\n","import React from 'react'\n\nconst NothingSelected = () => {\n    return (\n        <div className='nothing__main-content'>\n            <p>\n                Select something\n                <br />\n                or create an new entry\n            </p>\n            <i className='far fa-star fa-4x mt-5'></i>\n        </div>\n    )\n}\n\nexport default NothingSelected\n","import { types } from '../types/types'\n\nexport const setError = (err) => ({\n    type: types.uiSetError,\n    payload: err,\n})\nexport const unsetError = () => ({\n    type: types.uiUnsetError,\n})\n\nexport const startLoading = () => ({\n    type: types.uiStartLoading,\n})\n\nexport const stopLoading = () => ({\n    type: types.uiStopLoading,\n})\n","import { types } from '../types/types'\nimport { firebase, googleAuthProvider } from '../firebase/firebaseConfig'\nimport { stopLoading, startLoading } from './ui'\nimport Swal from 'sweetalert2'\nimport { noteLogout } from './notes'\n\nexport const startLoginEmailPassword = (email, password) => {\n    return (dispatch) => {\n        dispatch(startLoading())\n        firebase\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .then(async ({ user }) => {\n                await dispatch(login(user.uid, user.displayName))\n                dispatch(stopLoading())\n            })\n            .catch((e) => {\n                Swal.fire('Error', e.message, 'error')\n                dispatch(stopLoading())\n            })\n    }\n}\n\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\n    return (dispatch) => {\n        firebase\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .then(async ({ user }) => {\n                await user.updateProfile({ displayName: name })\n                dispatch(login(user.uid, user.displayName))\n            })\n            .catch((e) => {\n                Swal.fire('Error', e.message, 'error')\n            })\n    }\n}\n\nexport const startGoogleLogin = () => {\n    return (dispatch) => {\n        firebase\n            .auth()\n            .signInWithPopup(googleAuthProvider)\n            .then(({ user }) => {\n                dispatch(login(user.uid, user.displayName))\n            })\n    }\n}\n\nexport const login = (uid, displayName) => ({\n    type: types.login,\n    payload: { uid, displayName },\n})\n\nexport const startLogout = () => {\n    return async (dispatch) => {\n        await firebase.auth().signOut()\n        dispatch(logout())\n        dispatch(noteLogout())\n    }\n}\n\nexport const logout = () => ({\n    type: types.logout,\n})\n","import React from 'react'\nimport moment from 'moment'\nimport { useDispatch } from 'react-redux'\nimport { activeNote } from '../../actions/notes'\n\nconst JournalEntry = ({ id, date, title, body, url }) => {\n    const noteDate = moment(date)\n\n    const dispatch = useDispatch()\n    const handleEntryClick = () => {\n        dispatch(activeNote(id, { date, title, body, url }))\n    }\n\n    return (\n        <div\n            className='journal__entry pointer animate__animated animate__fadeIn animate__fast'\n            onClick={handleEntryClick}\n        >\n            {url && (\n                <div\n                    className='journal__entry-picture'\n                    style={{\n                        backgroundSize: 'cover',\n                        backgroundImage: `url(${url})`,\n                    }}\n                ></div>\n            )}\n            <div className='journal__entry-body'>\n                <p className='journal__entry-title'>{title}</p>\n                <p className='journal__entry-content'>{body}</p>\n            </div>\n            <div className='journal__entry-date-box'>\n                <span>{noteDate.format('dddd')}</span>\n                <h4>{noteDate.format('Do')}</h4>\n            </div>\n        </div>\n    )\n}\n\nexport default JournalEntry\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport JournalEntry from './JournalEntry'\n\nconst JournalEntries = () => {\n    const { notes } = useSelector((state) => state.notes)\n    return (\n        <div className='journal__entries '>\n            {notes.map((note) => (\n                <JournalEntry key={note.id} {...note} />\n            ))}\n        </div>\n    )\n}\n\nexport default JournalEntries\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth'\nimport { startNewNote } from '../../actions/notes'\nimport JournalEntries from './JournalEntries'\n\nconst Sidebar = () => {\n    const dispatch = useDispatch()\n    const { name } = useSelector((state) => state.auth)\n    const handleLogout = () => {\n        dispatch(startLogout())\n    }\n\n    const handleAddEntry = () => {\n        dispatch(startNewNote())\n    }\n\n    return (\n        <aside className='journal__sidebar'>\n            <div className='journal__sidebar-navbar'>\n                <h3 className='mt-5'>\n                    <i className='far fa-user'></i>\n                    <span> {name}</span>\n                </h3>\n                <button className='btn' onClick={handleLogout}>\n                    Logout\n                </button>\n            </div>\n            <div className='journal__new-entry' onClick={handleAddEntry}>\n                <i className='far fa-calendar-plus fa-5x'></i>\n                <p className='mt-5'>New entry</p>\n            </div>\n            <JournalEntries />\n        </aside>\n    )\n}\n\nexport default Sidebar\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport NotesScreen from '../notes/NotesScreen'\nimport NothingSelected from './NothingSelected'\nimport Sidebar from './Sidebar'\n\nconst JournalScreen = () => {\n    const { active } = useSelector((state) => state.notes)\n    return (\n        <div className='journal__main-content animate__animated animate__fadeIn animate__fast'>\n            <Sidebar />\n            <main>{active ? <NotesScreen /> : <NothingSelected />}</main>\n        </div>\n    )\n}\n\nexport default JournalScreen\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useForm } from '../../hooks/useForm'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\nimport { setError, unsetError } from '../../actions/ui'\nimport validator from 'validator'\n\nconst LoginScreen = () => {\n    const dispatch = useDispatch()\n    const [formValues, handleInputChange] = useForm({\n        email: 'joqtan@mail.com',\n        password: 'Password12.',\n    })\n    const { loading, msgError } = useSelector((state) => state.ui)\n    const { email, password } = formValues\n\n    const isValid = () => {\n        if (!validator.isEmail(email)) {\n            dispatch(setError('a valid email is required'))\n            return false\n        } else if (validator.isEmpty(password)) {\n            dispatch(setError('a valid password is required'))\n            return false\n        }\n        dispatch(unsetError())\n        return true\n    }\n\n    const handleLogin = (e) => {\n        e.preventDefault()\n        if (isValid()) {\n            dispatch(startLoginEmailPassword(email, password))\n        }\n    }\n    const handleGooogleLogin = () => {\n        dispatch(startGoogleLogin())\n    }\n\n    return (\n        <>\n            <h3 className='auth__title mb-5'>Login</h3>\n            <form\n                onSubmit={handleLogin}\n                className='animate__animated animate__fadeIn animate__fast'\n            >\n                {msgError && (\n                    <div className='auth__alert-error'>{msgError}</div>\n                )}\n                <label className='auth__label'>Email</label>\n                <input\n                    type='text'\n                    name='email'\n                    autoComplete='off'\n                    className='auth__input'\n                    value={email}\n                    onChange={handleInputChange}\n                />\n                <label className='auth__label'>Password</label>\n                <input\n                    type='password'\n                    name='password'\n                    className='auth__input'\n                    value={password}\n                    onChange={handleInputChange}\n                />\n                <button\n                    className='btn btn-primary btn-block'\n                    type='submit'\n                    disabled={loading}\n                >\n                    Login\n                </button>\n                <div className='auth__social-networks'>\n                    <p>Login with social networks</p>\n                    <div className='google-btn' onClick={handleGooogleLogin}>\n                        <div className='google-icon-wrapper'>\n                            <img\n                                className='google-icon'\n                                src='https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg'\n                                alt='google button'\n                            />\n                        </div>\n                        <p className='btn-text'>\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n                <Link to='/auth/register' className='link'>\n                    Create new account\n                </Link>\n            </form>\n        </>\n    )\n}\n\nexport default LoginScreen\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useForm } from '../../hooks/useForm'\nimport validator from 'validator'\nimport { useDispatch } from 'react-redux'\nimport { setError, unsetError } from '../../actions/ui'\nimport { useSelector } from 'react-redux'\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth'\n\nconst RegisterScreen = () => {\n    const dispatch = useDispatch()\n    const { msgError } = useSelector((state) => state.ui)\n\n    const [formValues, handleInputChange] = useForm({\n        name: 'alberto',\n        email: 'joqtan@mail.com',\n        password: 'Password12.',\n        passwordConfirm: 'Password12.',\n    })\n\n    const { name, email, password, passwordConfirm } = formValues\n\n    const isFormValid = () => {\n        if (validator.isEmpty(name, { ignore_whitespace: true })) {\n            dispatch(setError('name is required'))\n            return false\n        } else if (!validator.isEmail(email)) {\n            dispatch(setError('a valid email is required'))\n            return false\n        } else if (!validator.isStrongPassword(password)) {\n            dispatch(setError('you should provide a strong password'))\n            return false\n        } else if (!validator.equals(password, passwordConfirm)) {\n            dispatch(setError(`passwords doesn't match`))\n            return false\n        }\n        dispatch(unsetError())\n        return true\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault()\n        if (isFormValid()) {\n            dispatch(startRegisterWithEmailPasswordName(email, password, name))\n        }\n    }\n\n    return (\n        <>\n            <h3 className='auth__title mb-5'>Register</h3>\n            <form\n                onSubmit={handleRegister}\n                className='animate__animated animate__fadeIn animate__fast'\n            >\n                {msgError && (\n                    <div className='auth__alert-error'>{msgError}</div>\n                )}\n                <label className='auth__label'>Name</label>\n                <input\n                    type='text'\n                    name='name'\n                    autoComplete='off'\n                    className='auth__input'\n                    placeholder='Your name'\n                    value={name}\n                    onChange={handleInputChange}\n                />\n                <label className='auth__label'>Email</label>\n                <input\n                    type='text'\n                    name='email'\n                    autoComplete='off'\n                    className='auth__input'\n                    placeholder='Your email'\n                    value={email}\n                    onChange={handleInputChange}\n                />\n                <label className='auth__label'>Password</label>\n                <input\n                    type='password'\n                    name='password'\n                    className='auth__input'\n                    placeholder='New password'\n                    value={password}\n                    onChange={handleInputChange}\n                />\n                <label className='auth__label'>Password</label>\n                <input\n                    type='password'\n                    name='passwordConfirm'\n                    className='auth__input'\n                    placeholder='Confirm password'\n                    value={passwordConfirm}\n                    onChange={handleInputChange}\n                />\n                <button\n                    className='btn btn-primary btn-block mb-5'\n                    type='submit'\n                >\n                    Register\n                </button>\n                <Link to='/auth/login' className='link'>\n                    Sing in instead\n                </Link>\n            </form>\n        </>\n    )\n}\n\nexport default RegisterScreen\n","import React from 'react'\nimport { Redirect, Route, Switch } from 'react-router'\nimport LoginScreen from '../components/auth/LoginScreen'\nimport RegisterScreen from '../components/auth/RegisterScreen'\n\nconst AuthRouter = () => {\n    return (\n        <div className='auth__main'>\n            <div className='auth__box-container'>\n                <Switch>\n                    <Route exact path='/auth/login' component={LoginScreen} />\n                    <Route\n                        exact\n                        path='/auth/register'\n                        component={RegisterScreen}\n                    />\n                    <Redirect to='/auth/login' />\n                </Switch>\n            </div>\n        </div>\n    )\n}\n\nexport default AuthRouter\n","import React from 'react'\nimport { Redirect, Route } from 'react-router'\n\nconst PublicRoute = ({ isLoggedIn, component: Component, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            component={(props) =>\n                isLoggedIn ? <Redirect to='/' /> : <Component {...props} />\n            }\n        />\n    )\n}\n\nexport default PublicRoute\n","import React from 'react'\nimport { Redirect, Route } from 'react-router'\nimport PropTypes from 'prop-types'\n\nconst PrivateRoute = ({ isLoggedIn, component: Component, ...rest }) => {\n    return (\n        <Route\n            {...rest}\n            component={(props) =>\n                isLoggedIn ? (\n                    <Component {...props} />\n                ) : (\n                    <Redirect to='/auth/login' />\n                )\n            }\n        />\n    )\n}\nPrivateRoute.propTypes = {\n    isLoggedIn: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired,\n}\n\nexport default PrivateRoute\n","import React, { useEffect, useState } from 'react'\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport firebase from 'firebase/app'\nimport JournalScreen from '../components/journal/JournalScreen'\nimport AuthRouter from './AuthRouter'\nimport { login } from '../actions/auth'\nimport PublicRoute from './PublicRoute'\nimport PrivateRoute from './PrivateRoute'\nimport { startLoadingNotes } from '../actions/notes'\n\nconst AppRouter = () => {\n    const dispatch = useDispatch()\n\n    const [checking, setChecking] = useState(true)\n\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\n\n    useEffect(() => {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user?.uid) {\n                dispatch(login(user.uid, user.displayName))\n                setIsLoggedIn(true)\n                dispatch(startLoadingNotes(user.uid))\n            } else {\n                setIsLoggedIn(false)\n            }\n            setChecking(false)\n        })\n    }, [dispatch, setChecking, setIsLoggedIn])\n    if (checking) {\n        return <h1>Wait...</h1>\n    }\n\n    return (\n        <Router>\n            <div className=''>\n                <Switch>\n                    <PublicRoute\n                        path='/auth'\n                        component={AuthRouter}\n                        isLoggedIn={isLoggedIn}\n                    />\n                    <PrivateRoute\n                        exact\n                        isLoggedIn={isLoggedIn}\n                        path='/'\n                        component={JournalScreen}\n                    />\n                    <Redirect to='/auth/login' />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n\nexport default AppRouter\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport { store } from './store/store'\nimport AppRouter from './routers/AppRouter'\n\nconst JournalApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n\nexport default JournalApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport JournalApp from './JournalApp'\nimport './styles/styles.scss'\n\nReactDOM.render(<JournalApp />, document.getElementById('root'))\n"],"sourceRoot":""}